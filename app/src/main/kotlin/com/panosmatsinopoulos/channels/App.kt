/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.panosmatsinopoulos.channels

import kotlinx.coroutines.*
import kotlinx.coroutines.channels.ReceiveChannel
import kotlinx.coroutines.channels.produce

@OptIn(ExperimentalCoroutinesApi::class)
fun CoroutineScope.productNumbers() = produce<Int> {
    var x = 1
    while (true) {
        send(x++)
        delay(100)
    }
}

fun CoroutineScope.launchProcessor(id: Int, channel: ReceiveChannel<Int>) = launch {
    for (msg in channel) {
        log("processor #$id received $msg")
    }
}

fun log(msg: String) {
    println("[${Thread.currentThread().name}] $msg")
}

fun main() {
    runBlocking {
        val producer = productNumbers()
        repeat(5) { launchProcessor(it, producer) }
        delay(1110)
        producer.cancel()
    }
}
